["function Example() {\n  const [sortDir, setSortDir] = React.useState(null);\n  return (\n    <DataTable>\n      <DataTableContent>\n        <DataTableHead>\n          <DataTableRow>\n            <DataTableHeadCell>Item</DataTableHeadCell>\n            <DataTableHeadCell\n              alignEnd\n              sort={sortDir}\n              onSortChange={(sortDir) => {\n                setSortDir(sortDir);\n                console.log(sortDir);\n              }}\n            >\n              Quantity (Click Me)\n            </DataTableHeadCell>\n            <DataTableHeadCell alignEnd>Unit price</DataTableHeadCell>\n          </DataTableRow>\n        </DataTableHead>\n        <DataTableBody>\n          <DataTableRow>\n            <DataTableCell>Cookies</DataTableCell>\n            <DataTableCell alignEnd>25</DataTableCell>\n            <DataTableCell alignEnd>$2.90</DataTableCell>\n          </DataTableRow>\n          <DataTableRow selected>\n            <DataTableCell>Pizza</DataTableCell>\n            <DataTableCell alignEnd>50</DataTableCell>\n            <DataTableCell alignEnd>$1.25</DataTableCell>\n          </DataTableRow>\n          <DataTableRow>\n            <DataTableCell>Icecream</DataTableCell>\n            <DataTableCell alignEnd>10</DataTableCell>\n            <DataTableCell alignEnd>$2.35</DataTableCell>\n          </DataTableRow>\n        </DataTableBody>\n      </DataTableContent>\n    </DataTable>\n  );\n}","function Example() {\n  const [rows, setRows] = React.useState(0);\n  const [cols, setCols] = React.useState(0);\n  const sampleColumns = Array(7).fill(undefined);\n  const sampleRows = Array(50).fill(undefined);\n\n  return (\n    <>\n      <DataTable\n        style={{ height: '300px', width: '375px' }}\n        stickyRows={rows}\n        stickyColumns={cols}\n      >\n        <DataTableContent>\n          <DataTableHead>\n            <DataTableRow>\n              <DataTableHeadCell>Label</DataTableHeadCell>\n              {sampleColumns.map((v, i) => (\n                <DataTableHeadCell key={i}>Header</DataTableHeadCell>\n              ))}\n            </DataTableRow>\n          </DataTableHead>\n          <DataTableBody>\n            {sampleRows.map((v, i) => (\n              <DataTableRow key={i}>\n                <DataTableCell>Label</DataTableCell>\n                <DataTableCell>R{i} C1</DataTableCell>\n                <DataTableCell>R{i} C2</DataTableCell>\n                <DataTableCell>R{i} C3</DataTableCell>\n                <DataTableCell>R{i} C4</DataTableCell>\n                <DataTableCell>R{i} C5</DataTableCell>\n                <DataTableCell>R{i} C6</DataTableCell>\n                <DataTableCell>R{i} C7</DataTableCell>\n              </DataTableRow>\n            ))}\n          </DataTableBody>\n        </DataTableContent>\n      </DataTable>\n\n      <div className=\"doc-controls\">\n        <Select\n          label=\"Sticky Rows\"\n          options={['0', '1']}\n          value={String(rows)}\n          onChange={(evt) => setRows(Number(evt.currentTarget.value))}\n        />\n        <Select\n          label=\"Sticky Cols\"\n          options={['0', '1']}\n          value={String(cols)}\n          onChange={(evt) => setCols(Number(evt.currentTarget.value))}\n        />\n      </div>\n    </>\n  );\n}","function Example() {\n  const [checked, setChecked] = React.useState({});\n  const sampleRows = new Array(5).fill(undefined);\n\n  return (\n    <DataTable>\n      <DataTableContent>\n        <DataTableHead>\n          <DataTableRow>\n            <DataTableHeadCell hasFormControl>\n              <Checkbox />\n            </DataTableHeadCell>\n            <DataTableHeadCell>Label</DataTableHeadCell>\n            <DataTableHeadCell>Header</DataTableHeadCell>\n            <DataTableHeadCell>Header</DataTableHeadCell>\n            <DataTableHeadCell>Toggle</DataTableHeadCell>\n          </DataTableRow>\n        </DataTableHead>\n        <DataTableBody>\n          {sampleRows.map((v, i) => (\n            <DataTableRow key={i} selected={checked[i]}>\n              <DataTableCell hasFormControl>\n                <Checkbox\n                  checked={checked[i]}\n                  onChange={(evt) => {\n                    checked[i] = evt.currentTarget.checked;\n                    setChecked({ ...checked });\n                  }}\n                />\n              </DataTableCell>\n              <DataTableCell>Label</DataTableCell>\n              <DataTableCell>\n                <Select\n                  placeholder=\"--Select--\"\n                  options={['Cookies', 'Pizza', 'Icecream']}\n                />\n              </DataTableCell>\n              <DataTableCell>R{i} C3</DataTableCell>\n              <DataTableCell>\n                <Switch />\n              </DataTableCell>\n            </DataTableRow>\n          ))}\n        </DataTableBody>\n      </DataTableContent>\n    </DataTable>\n  );\n}","<SimpleDataTable\n  getRowProps={(row) => {\n    return row[1] > 100 ? { activated: true } : {};\n  }}\n  getCellProps={(cell, index, isHead) => {\n    const props = { isNumeric: index > 0, style: undefined };\n\n    return !isHead && index === 2 && !cell.includes('$')\n      ? { ...props, style: { color: 'red' } }\n      : props;\n  }}\n  headers={[['Item', 'Quantity', 'Value']]}\n  data={[\n    ['Cookies', 25, '$12.40'],\n    ['Pizza', 11, '$10.43'],\n    ['Icecream', 3, '1.43'],\n    ['Candy', 72, '$22.45'],\n    ['Cakes', 101, '$215.05'],\n    ['Muffins', 3, '$5.97']\n  ]}\n/>"]