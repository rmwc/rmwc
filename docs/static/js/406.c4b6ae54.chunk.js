"use strict";(self.webpackChunkrmwc_main=self.webpackChunkrmwc_main||[]).push([[406],{9406:function(e,n,i){i.r(n),i.d(n,{default:function(){return u}});var t=i(4942),s=i(1413),a=i(9439),c=i(390),r=i(8537),o=i(2527),m=JSON.parse('["<List twoLine>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Cookies</ListItemPrimaryText>\\n      <ListItemSecondaryText>$4.99 a dozen</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Pizza</ListItemPrimaryText>\\n      <ListItemSecondaryText>$1.99 a slice</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Icecream</ListItemPrimaryText>\\n      <ListItemSecondaryText>$0.99 a scoop</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n</List>","<List>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"favorite\\" />\\n    Leading\\n  </ListItem>\\n  <ListItem>\\n    Trailing\\n    <ListItemMeta icon=\\"star\\" />\\n  </ListItem>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"wifi\\" />\\n    Leading and Trailing\\n    <ListItemMeta icon=\\"info\\" />\\n  </ListItem>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"wifi\\" />\\n    Leading with Trailing Text\\n    <ListItemMeta>HELLO!</ListItemMeta>\\n  </ListItem>\\n</List>","<List twoLine avatarList>\\n  <ListGroup>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/blackwidow.png\\"\\n            size=\\"xsmall\\"\\n            name=\\"Natalia Alianovna Romanova\\"\\n          />\\n        }\\n      />\\n      Natalia Alianovna Romanova\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/hulk.png\\"\\n            size=\\"small\\"\\n            name=\\"Bruce Banner\\"\\n          />\\n        }\\n      />\\n      Bruce Banner\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n  </ListGroup>\\n  <ListDivider />\\n  <ListGroup>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/thor.png\\"\\n            size=\\"medium\\"\\n            name=\\"Thor Odinson\\"\\n          />\\n        }\\n      />\\n      Thor Odinson\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n  </ListGroup>\\n</List>","function Example() {\\n  const [checked, setChecked] = React.useState({\\n    Cookies: false,\\n    Pizza: false,\\n    Icecream: false\\n  });\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map((key) => (\\n        <ListItem\\n          key={key}\\n          onClick={() =>\\n            setChecked({ ...checked, [key]: !checked[key] })\\n          }\\n        >\\n          {key}\\n          <ListItemMeta>\\n            <Checkbox checked={checked[key]} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}","function Example() {\\n  const [checked, setChecked] = React.useState({\\n    Cookies: false,\\n    Pizza: false,\\n    Icecream: false\\n  });\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map((key) => (\\n        <ListItem\\n          key={key}\\n          onClick={() =>\\n            setChecked({ ...checked, [key]: !checked[key] })\\n          }\\n        >\\n          {key}\\n          <ListItemMeta>\\n            <Switch checked={checked[key]} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}","function Example() {\\n  const [checked, setChecked] = React.useState(\'Cookies\');\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map((key) => (\\n        <ListItem key={key} onClick={() => setChecked(key)}>\\n          {key}\\n          <ListItemMeta>\\n            <Radio checked={checked === key} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}"]'),l=i(5669),d=i(2636),L=i(6215),h=i(5197),x=i(821),I=i(1982),k=i(2559);function u(){return(0,k.jsxs)(r.WI,{title:"Lists",lead:"Lists are continuous, vertical indexes of text or images.",module:"@rmwc/list",styles:["@material/list/dist/mdc.list.css"],docsLink:"https://material.io/develop/web/components/lists/",examples:m,children:[(0,k.jsx)(r.sb,{children:"Two Line"}),(0,k.jsx)(r.PJ,{children:"When using the `twoLine` prop, you have to wrap the contents of the `ListItem` in `ListItemText`."}),(0,k.jsx)(r.q3,{children:(0,k.jsxs)(l.a,{twoLine:!0,children:[(0,k.jsx)(d.HC,{children:(0,k.jsxs)(d.F_,{children:[(0,k.jsx)(d.iY,{children:"Cookies"}),(0,k.jsx)(d.N0,{children:"$4.99 a dozen"})]})}),(0,k.jsx)(d.HC,{children:(0,k.jsxs)(d.F_,{children:[(0,k.jsx)(d.iY,{children:"Pizza"}),(0,k.jsx)(d.N0,{children:"$1.99 a slice"})]})}),(0,k.jsx)(d.HC,{children:(0,k.jsxs)(d.F_,{children:[(0,k.jsx)(d.iY,{children:"Icecream"}),(0,k.jsx)(d.N0,{children:"$0.99 a scoop"})]})})]})}),(0,k.jsx)(r.sb,{children:"Leading and Trailing Icons"}),(0,k.jsx)(r.q3,{children:(0,k.jsxs)(l.a,{children:[(0,k.jsxs)(d.HC,{children:[(0,k.jsx)(d.rk,{icon:"favorite"}),"Leading"]}),(0,k.jsxs)(d.HC,{children:["Trailing",(0,k.jsx)(d.GN,{icon:"star"})]}),(0,k.jsxs)(d.HC,{children:[(0,k.jsx)(d.rk,{icon:"wifi"}),"Leading and Trailing",(0,k.jsx)(d.GN,{icon:"info"})]}),(0,k.jsxs)(d.HC,{children:[(0,k.jsx)(d.rk,{icon:"wifi"}),"Leading with Trailing Text",(0,k.jsx)(d.GN,{children:"HELLO!"})]})]})}),(0,k.jsx)(r.sb,{children:"Avatar List with Dividers"}),(0,k.jsx)(r.q3,{children:(0,k.jsxs)(l.a,{twoLine:!0,avatarList:!0,children:[(0,k.jsxs)(d.NX,{children:[(0,k.jsxs)(d.HC,{children:[(0,k.jsx)(d.rk,{icon:(0,k.jsx)(L.qE,{src:"images/avatars/blackwidow.png",size:"xsmall",name:"Natalia Alianovna Romanova"})}),"Natalia Alianovna Romanova",(0,k.jsx)(d.GN,{icon:"info"})]}),(0,k.jsxs)(d.HC,{children:[(0,k.jsx)(d.rk,{icon:(0,k.jsx)(L.qE,{src:"images/avatars/hulk.png",size:"small",name:"Bruce Banner"})}),"Bruce Banner",(0,k.jsx)(d.GN,{icon:"info"})]})]}),(0,k.jsx)(d.Rx,{}),(0,k.jsx)(d.NX,{children:(0,k.jsxs)(d.HC,{children:[(0,k.jsx)(d.rk,{icon:(0,k.jsx)(L.qE,{src:"images/avatars/thor.png",size:"medium",name:"Thor Odinson"})}),"Thor Odinson",(0,k.jsx)(d.GN,{icon:"info"})]})})]})}),(0,k.jsx)(r.sb,{children:"Selectable"}),(0,k.jsx)(r.PJ,{children:"Checkboxes and Radios can be included as part of `ListItemMeta`. It is recommended when using these that you are using controlled components, and that you put your interaction handler on the `ListItem` itself. Notice the `readOnly` prop is also set on the individual form elements."}),(0,k.jsx)(r.q3,{label:"Checkboxes",children:function(){var e=c.useState({Cookies:!1,Pizza:!1,Icecream:!1}),n=(0,a.Z)(e,2),i=n[0],r=n[1];return(0,k.jsx)(l.a,{children:["Cookies","Pizza","Icecream"].map((function(e){return(0,k.jsxs)(d.HC,{onClick:function(){return r((0,s.Z)((0,s.Z)({},i),{},(0,t.Z)({},e,!i[e])))},children:[e,(0,k.jsx)(d.GN,{children:(0,k.jsx)(h.X,{checked:i[e],readOnly:!0})})]},e)}))})}}),(0,k.jsx)(r.q3,{label:"Switches",children:function(){var e=c.useState({Cookies:!1,Pizza:!1,Icecream:!1}),n=(0,a.Z)(e,2),i=n[0],r=n[1];return(0,k.jsx)(l.a,{children:["Cookies","Pizza","Icecream"].map((function(e){return(0,k.jsxs)(d.HC,{onClick:function(){return r((0,s.Z)((0,s.Z)({},i),{},(0,t.Z)({},e,!i[e])))},children:[e,(0,k.jsx)(d.GN,{children:(0,k.jsx)(x.r,{checked:i[e],readOnly:!0})})]},e)}))})}}),(0,k.jsx)(r.q3,{label:"Radios",children:function(){var e=c.useState("Cookies"),n=(0,a.Z)(e,2),i=n[0],t=n[1];return(0,k.jsx)(l.a,{children:["Cookies","Pizza","Icecream"].map((function(e){return(0,k.jsxs)(d.HC,{onClick:function(){return t(e)},children:[e,(0,k.jsx)(d.GN,{children:(0,k.jsx)(I.Y,{checked:i===e,readOnly:!0})})]},e)}))})}}),(0,k.jsx)(r.PQ,{src:o,components:[{displayName:"List",component:l.a},{displayName:"ListItem",component:d.HC},{displayName:"ListItemPrimaryText",component:d.iY},{displayName:"ListItemSecondaryText",component:d.N0},{displayName:"ListItemGraphic",component:d.rk},{displayName:"ListItemMeta",component:d.GN},{displayName:"ListDivider",component:d.Rx},{displayName:"ListGroup",component:d.NX},{displayName:"ListGroupSubheader",component:d.JV},{displayName:"SimpleListItem",component:d.ug}]})]})}}}]);
//# sourceMappingURL=406.c4b6ae54.chunk.js.map