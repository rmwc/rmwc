(this["webpackJsonprmwc-main"]=this["webpackJsonprmwc-main"]||[]).push([[7],{1074:function(e){e.exports=JSON.parse('["<List twoLine>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Cookies</ListItemPrimaryText>\\n      <ListItemSecondaryText>$4.99 a dozen</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Pizza</ListItemPrimaryText>\\n      <ListItemSecondaryText>$1.99 a slice</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Icecream</ListItemPrimaryText>\\n      <ListItemSecondaryText>$0.99 a scoop</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n</List>","<List>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"favorite\\" />\\n    Leading\\n  </ListItem>\\n  <ListItem>\\n    Trailing\\n    <ListItemMeta icon=\\"star\\" />\\n  </ListItem>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"wifi\\" />\\n    Leading and Trailing\\n    <ListItemMeta icon=\\"info\\" />\\n  </ListItem>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"wifi\\" />\\n    Leading with Trailing Text\\n    <ListItemMeta>HELLO!</ListItemMeta>\\n  </ListItem>\\n</List>","<List twoLine avatarList>\\n  <ListGroup>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/blackwidow.png\\"\\n            size=\\"xsmall\\"\\n            name=\\"Natalia Alianovna Romanova\\"\\n          />\\n        }\\n      />\\n      Natalia Alianovna Romanova\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/hulk.png\\"\\n            size=\\"small\\"\\n            name=\\"Bruce Banner\\"\\n          />\\n        }\\n      />\\n      Bruce Banner\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n  </ListGroup>\\n  <ListDivider />\\n  <ListGroup>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/thor.png\\"\\n            size=\\"medium\\"\\n            name=\\"Thor Odinson\\"\\n          />\\n        }\\n      />\\n      Thor Odinson\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n  </ListGroup>\\n</List>","function Example() {\\n  const [checked, setChecked] = React.useState({\\n    Cookies: false,\\n    Pizza: false,\\n    Icecream: false\\n  });\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map((key) => (\\n        <ListItem\\n          key={key}\\n          onClick={() =>\\n            setChecked({ ...checked, [key]: !checked[key] })\\n          }\\n        >\\n          {key}\\n          <ListItemMeta>\\n            <Checkbox checked={checked[key]} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}","function Example() {\\n  const [checked, setChecked] = React.useState({\\n    Cookies: false,\\n    Pizza: false,\\n    Icecream: false\\n  });\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map((key) => (\\n        <ListItem\\n          key={key}\\n          onClick={() =>\\n            setChecked({ ...checked, [key]: !checked[key] })\\n          }\\n        >\\n          {key}\\n          <ListItemMeta>\\n            <Switch checked={checked[key]} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}","function Example() {\\n  const [checked, setChecked] = React.useState(\'Cookies\');\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map((key) => (\\n        <ListItem key={key} onClick={() => setChecked(key)}>\\n          {key}\\n          <ListItemMeta>\\n            <Radio checked={checked === key} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}"]')},1080:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return I}));var i=n(21),s=n(1),c=n(8),a=n(2),r=n.n(a),o=n(3),m=n(188),d=n(1074),j=n(64),l=n(13),L=n(22),h=n(36),x=n(61),b=n(51),O=n(0);function I(){return Object(O.jsxs)(o.b,{title:"Lists",lead:"Lists are continuous, vertical indexes of text or images.",module:"@rmwc/list",styles:["@material/list/dist/mdc.list.css"],docsLink:"https://material.io/develop/web/components/lists/",examples:d,children:[Object(O.jsx)(o.f,{children:"Two Line"}),Object(O.jsx)(o.e,{children:"When using the `twoLine` prop, you have to wrap the contents of the `ListItem` in `ListItemText`."}),Object(O.jsx)(o.c,{children:Object(O.jsxs)(j.a,{twoLine:!0,children:[Object(O.jsx)(l.d,{children:Object(O.jsxs)(l.i,{children:[Object(O.jsx)(l.g,{children:"Cookies"}),Object(O.jsx)(l.h,{children:"$4.99 a dozen"})]})}),Object(O.jsx)(l.d,{children:Object(O.jsxs)(l.i,{children:[Object(O.jsx)(l.g,{children:"Pizza"}),Object(O.jsx)(l.h,{children:"$1.99 a slice"})]})}),Object(O.jsx)(l.d,{children:Object(O.jsxs)(l.i,{children:[Object(O.jsx)(l.g,{children:"Icecream"}),Object(O.jsx)(l.h,{children:"$0.99 a scoop"})]})})]})}),Object(O.jsx)(o.f,{children:"Leading and Trailing Icons"}),Object(O.jsx)(o.c,{children:Object(O.jsxs)(j.a,{children:[Object(O.jsxs)(l.d,{children:[Object(O.jsx)(l.e,{icon:"favorite"}),"Leading"]}),Object(O.jsxs)(l.d,{children:["Trailing",Object(O.jsx)(l.f,{icon:"star"})]}),Object(O.jsxs)(l.d,{children:[Object(O.jsx)(l.e,{icon:"wifi"}),"Leading and Trailing",Object(O.jsx)(l.f,{icon:"info"})]}),Object(O.jsxs)(l.d,{children:[Object(O.jsx)(l.e,{icon:"wifi"}),"Leading with Trailing Text",Object(O.jsx)(l.f,{children:"HELLO!"})]})]})}),Object(O.jsx)(o.f,{children:"Avatar List with Dividers"}),Object(O.jsx)(o.c,{children:Object(O.jsxs)(j.a,{twoLine:!0,avatarList:!0,children:[Object(O.jsxs)(l.b,{children:[Object(O.jsxs)(l.d,{children:[Object(O.jsx)(l.e,{icon:Object(O.jsx)(L.a,{src:"images/avatars/blackwidow.png",size:"xsmall",name:"Natalia Alianovna Romanova"})}),"Natalia Alianovna Romanova",Object(O.jsx)(l.f,{icon:"info"})]}),Object(O.jsxs)(l.d,{children:[Object(O.jsx)(l.e,{icon:Object(O.jsx)(L.a,{src:"images/avatars/hulk.png",size:"small",name:"Bruce Banner"})}),"Bruce Banner",Object(O.jsx)(l.f,{icon:"info"})]})]}),Object(O.jsx)(l.a,{}),Object(O.jsx)(l.b,{children:Object(O.jsxs)(l.d,{children:[Object(O.jsx)(l.e,{icon:Object(O.jsx)(L.a,{src:"images/avatars/thor.png",size:"medium",name:"Thor Odinson"})}),"Thor Odinson",Object(O.jsx)(l.f,{icon:"info"})]})})]})}),Object(O.jsx)(o.f,{children:"Selectable"}),Object(O.jsx)(o.e,{children:"Checkboxes and Radios can be included as part of `ListItemMeta`. It is recommended when using these that you are using controlled components, and that you put your interaction handler on the `ListItem` itself. Notice the `readOnly` prop is also set on the individual form elements."}),Object(O.jsx)(o.c,{label:"Checkboxes",children:function(){var e=r.a.useState({Cookies:!1,Pizza:!1,Icecream:!1}),t=Object(c.a)(e,2),n=t[0],a=t[1];return Object(O.jsx)(j.a,{children:["Cookies","Pizza","Icecream"].map((function(e){return Object(O.jsxs)(l.d,{onClick:function(){return a(Object(s.a)(Object(s.a)({},n),{},Object(i.a)({},e,!n[e])))},children:[e,Object(O.jsx)(l.f,{children:Object(O.jsx)(h.a,{checked:n[e],readOnly:!0})})]},e)}))})}}),Object(O.jsx)(o.c,{label:"Switches",children:function(){var e=r.a.useState({Cookies:!1,Pizza:!1,Icecream:!1}),t=Object(c.a)(e,2),n=t[0],a=t[1];return Object(O.jsx)(j.a,{children:["Cookies","Pizza","Icecream"].map((function(e){return Object(O.jsxs)(l.d,{onClick:function(){return a(Object(s.a)(Object(s.a)({},n),{},Object(i.a)({},e,!n[e])))},children:[e,Object(O.jsx)(l.f,{children:Object(O.jsx)(x.a,{checked:n[e],readOnly:!0})})]},e)}))})}}),Object(O.jsx)(o.c,{label:"Radios",children:function(){var e=r.a.useState("Cookies"),t=Object(c.a)(e,2),n=t[0],i=t[1];return Object(O.jsx)(j.a,{children:["Cookies","Pizza","Icecream"].map((function(e){return Object(O.jsxs)(l.d,{onClick:function(){return i(e)},children:[e,Object(O.jsx)(l.f,{children:Object(O.jsx)(b.a,{checked:n===e,readOnly:!0})})]},e)}))})}}),Object(O.jsx)(o.a,{src:m,components:[{displayName:"List",component:j.a},{displayName:"ListItem",component:l.d},{displayName:"ListItemPrimaryText",component:l.g},{displayName:"ListItemSecondaryText",component:l.h},{displayName:"ListItemGraphic",component:l.e},{displayName:"ListItemMeta",component:l.f},{displayName:"ListDivider",component:l.a},{displayName:"ListGroup",component:l.b},{displayName:"ListGroupSubheader",component:l.c},{displayName:"SimpleListItem",component:l.j}]})]})}}}]);
//# sourceMappingURL=7.89c76bbe.chunk.js.map