{"version":3,"file":"static/js/406.c4b6ae54.chunk.js","mappings":"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","sources":["list/readme-variants.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples-variants.json';\n\nimport {\n  List,\n  ListItem,\n  ListGroupSubheader,\n  ListItemText,\n  ListItemPrimaryText,\n  ListItemSecondaryText,\n  ListItemGraphic,\n  ListItemMeta,\n  ListDivider,\n  ListGroup,\n  SimpleListItem\n} from '.';\n\nimport { Avatar } from '../avatar';\nimport { Checkbox } from '../checkbox';\nimport { Switch } from '../switch';\nimport { Radio } from '../radio';\n\nexport default function Readme() {\n  return (\n    <Docs\n      title=\"Lists\"\n      lead=\"Lists are continuous, vertical indexes of text or images.\"\n      module=\"@rmwc/list\"\n      styles={['@material/list/dist/mdc.list.css']}\n      docsLink=\"https://material.io/develop/web/components/lists/\"\n      examples={examples}\n    >\n      <DocsSubtitle>Two Line</DocsSubtitle>\n      <DocsP>\n        When using the `twoLine` prop, you have to wrap the contents of the\n        `ListItem` in `ListItemText`.\n      </DocsP>\n\n      <DocsExample>\n        <List twoLine>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Cookies</ListItemPrimaryText>\n              <ListItemSecondaryText>$4.99 a dozen</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Pizza</ListItemPrimaryText>\n              <ListItemSecondaryText>$1.99 a slice</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Icecream</ListItemPrimaryText>\n              <ListItemSecondaryText>$0.99 a scoop</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Leading and Trailing Icons</DocsSubtitle>\n\n      <DocsExample>\n        <List>\n          <ListItem>\n            <ListItemGraphic icon=\"favorite\" />\n            Leading\n          </ListItem>\n          <ListItem>\n            Trailing\n            <ListItemMeta icon=\"star\" />\n          </ListItem>\n          <ListItem>\n            <ListItemGraphic icon=\"wifi\" />\n            Leading and Trailing\n            <ListItemMeta icon=\"info\" />\n          </ListItem>\n          <ListItem>\n            <ListItemGraphic icon=\"wifi\" />\n            Leading with Trailing Text\n            <ListItemMeta>HELLO!</ListItemMeta>\n          </ListItem>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Avatar List with Dividers</DocsSubtitle>\n\n      <DocsExample>\n        <List twoLine avatarList>\n          <ListGroup>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/blackwidow.png\"\n                    size=\"xsmall\"\n                    name=\"Natalia Alianovna Romanova\"\n                  />\n                }\n              />\n              Natalia Alianovna Romanova\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/hulk.png\"\n                    size=\"small\"\n                    name=\"Bruce Banner\"\n                  />\n                }\n              />\n              Bruce Banner\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n          </ListGroup>\n          <ListDivider />\n          <ListGroup>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/thor.png\"\n                    size=\"medium\"\n                    name=\"Thor Odinson\"\n                  />\n                }\n              />\n              Thor Odinson\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n          </ListGroup>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Selectable</DocsSubtitle>\n      <DocsP>\n        Checkboxes and Radios can be included as part of `ListItemMeta`. It is\n        recommended when using these that you are using controlled components,\n        and that you put your interaction handler on the `ListItem` itself.\n        Notice the `readOnly` prop is also set on the individual form elements.\n      </DocsP>\n\n      <DocsExample label=\"Checkboxes\">\n        {/* @ts-ignore */}\n        {function Example() {\n          const [checked, setChecked] = React.useState<any>({\n            Cookies: false,\n            Pizza: false,\n            Icecream: false\n          });\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map((key) => (\n                <ListItem\n                  key={key}\n                  onClick={() =>\n                    setChecked({ ...checked, [key]: !checked[key] })\n                  }\n                >\n                  {key}\n                  <ListItemMeta>\n                    <Checkbox checked={checked[key]} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Switches\">\n        {/* @ts-ignore */}\n        {function Example() {\n          const [checked, setChecked] = React.useState<any>({\n            Cookies: false,\n            Pizza: false,\n            Icecream: false\n          });\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map((key) => (\n                <ListItem\n                  key={key}\n                  onClick={() =>\n                    setChecked({ ...checked, [key]: !checked[key] })\n                  }\n                >\n                  {key}\n                  <ListItemMeta>\n                    <Switch checked={checked[key]} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Radios\">\n        {/* @ts-ignore */}\n        {function Example() {\n          const [checked, setChecked] = React.useState('Cookies');\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map((key) => (\n                <ListItem key={key} onClick={() => setChecked(key)}>\n                  {key}\n                  <ListItemMeta>\n                    <Radio checked={checked === key} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocProps\n        src={propsSrc}\n        components={[\n          { displayName: 'List', component: List },\n          { displayName: 'ListItem', component: ListItem },\n          {\n            displayName: 'ListItemPrimaryText',\n            component: ListItemPrimaryText\n          },\n          {\n            displayName: 'ListItemSecondaryText',\n            component: ListItemSecondaryText\n          },\n          { displayName: 'ListItemGraphic', component: ListItemGraphic },\n          { displayName: 'ListItemMeta', component: ListItemMeta },\n          { displayName: 'ListDivider', component: ListDivider },\n          { displayName: 'ListGroup', component: ListGroup },\n          { displayName: 'ListGroupSubheader', component: ListGroupSubheader },\n          { displayName: 'SimpleListItem', component: SimpleListItem }\n        ]}\n      />\n    </Docs>\n  );\n}\n"],"names":["Readme","_jsxs","Docs","title","lead","module","styles","docsLink","examples","children","_jsx","DocsSubtitle","DocsP","DocsExample","List","twoLine","ListItem","ListItemText","ListItemPrimaryText","ListItemSecondaryText","ListItemGraphic","icon","ListItemMeta","avatarList","ListGroup","Avatar","src","size","name","ListDivider","label","_React$useState","React","Cookies","Pizza","Icecream","_React$useState2","_slicedToArray","checked","setChecked","map","key","onClick","_objectSpread","_defineProperty","Checkbox","readOnly","_React$useState3","_React$useState4","Switch","_React$useState5","_React$useState6","Radio","DocProps","propsSrc","components","displayName","component","ListGroupSubheader","SimpleListItem"],"sourceRoot":""}