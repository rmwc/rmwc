{"version":3,"sources":["list/readme-variants.tsx"],"names":["Readme","title","lead","module","styles","docsLink","examples","twoLine","icon","avatarList","src","size","name","label","React","useState","Cookies","Pizza","Icecream","checked","setChecked","map","key","onClick","readOnly","propsSrc","components","displayName","component","List","ListItem","ListItemPrimaryText","ListItemSecondaryText","ListItemGraphic","ListItemMeta","ListDivider","ListGroup","ListGroupSubheader","SimpleListItem"],"mappings":"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","file":"static/js/7.89c76bbe.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples-variants.json';\n\nimport {\n  List,\n  ListItem,\n  ListGroupSubheader,\n  ListItemText,\n  ListItemPrimaryText,\n  ListItemSecondaryText,\n  ListItemGraphic,\n  ListItemMeta,\n  ListDivider,\n  ListGroup,\n  SimpleListItem\n} from '.';\n\nimport { Avatar } from '../avatar';\nimport { Checkbox } from '../checkbox';\nimport { Switch } from '../switch';\nimport { Radio } from '../radio';\n\nexport default function Readme() {\n  return (\n    <Docs\n      title=\"Lists\"\n      lead=\"Lists are continuous, vertical indexes of text or images.\"\n      module=\"@rmwc/list\"\n      styles={['@material/list/dist/mdc.list.css']}\n      docsLink=\"https://material.io/develop/web/components/lists/\"\n      examples={examples}\n    >\n      <DocsSubtitle>Two Line</DocsSubtitle>\n      <DocsP>\n        When using the `twoLine` prop, you have to wrap the contents of the\n        `ListItem` in `ListItemText`.\n      </DocsP>\n\n      <DocsExample>\n        <List twoLine>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Cookies</ListItemPrimaryText>\n              <ListItemSecondaryText>$4.99 a dozen</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Pizza</ListItemPrimaryText>\n              <ListItemSecondaryText>$1.99 a slice</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Icecream</ListItemPrimaryText>\n              <ListItemSecondaryText>$0.99 a scoop</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Leading and Trailing Icons</DocsSubtitle>\n\n      <DocsExample>\n        <List>\n          <ListItem>\n            <ListItemGraphic icon=\"favorite\" />\n            Leading\n          </ListItem>\n          <ListItem>\n            Trailing\n            <ListItemMeta icon=\"star\" />\n          </ListItem>\n          <ListItem>\n            <ListItemGraphic icon=\"wifi\" />\n            Leading and Trailing\n            <ListItemMeta icon=\"info\" />\n          </ListItem>\n          <ListItem>\n            <ListItemGraphic icon=\"wifi\" />\n            Leading with Trailing Text\n            <ListItemMeta>HELLO!</ListItemMeta>\n          </ListItem>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Avatar List with Dividers</DocsSubtitle>\n\n      <DocsExample>\n        <List twoLine avatarList>\n          <ListGroup>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/blackwidow.png\"\n                    size=\"xsmall\"\n                    name=\"Natalia Alianovna Romanova\"\n                  />\n                }\n              />\n              Natalia Alianovna Romanova\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/hulk.png\"\n                    size=\"small\"\n                    name=\"Bruce Banner\"\n                  />\n                }\n              />\n              Bruce Banner\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n          </ListGroup>\n          <ListDivider />\n          <ListGroup>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/thor.png\"\n                    size=\"medium\"\n                    name=\"Thor Odinson\"\n                  />\n                }\n              />\n              Thor Odinson\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n          </ListGroup>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Selectable</DocsSubtitle>\n      <DocsP>\n        Checkboxes and Radios can be included as part of `ListItemMeta`. It is\n        recommended when using these that you are using controlled components,\n        and that you put your interaction handler on the `ListItem` itself.\n        Notice the `readOnly` prop is also set on the individual form elements.\n      </DocsP>\n\n      <DocsExample label=\"Checkboxes\">\n        {function Example() {\n          const [checked, setChecked] = React.useState<any>({\n            Cookies: false,\n            Pizza: false,\n            Icecream: false\n          });\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map((key) => (\n                <ListItem\n                  key={key}\n                  onClick={() =>\n                    setChecked({ ...checked, [key]: !checked[key] })\n                  }\n                >\n                  {key}\n                  <ListItemMeta>\n                    <Checkbox checked={checked[key]} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Switches\">\n        {function Example() {\n          const [checked, setChecked] = React.useState<any>({\n            Cookies: false,\n            Pizza: false,\n            Icecream: false\n          });\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map((key) => (\n                <ListItem\n                  key={key}\n                  onClick={() =>\n                    setChecked({ ...checked, [key]: !checked[key] })\n                  }\n                >\n                  {key}\n                  <ListItemMeta>\n                    <Switch checked={checked[key]} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Radios\">\n        {function Example() {\n          const [checked, setChecked] = React.useState('Cookies');\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map((key) => (\n                <ListItem key={key} onClick={() => setChecked(key)}>\n                  {key}\n                  <ListItemMeta>\n                    <Radio checked={checked === key} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocProps\n        src={propsSrc}\n        components={[\n          { displayName: 'List', component: List },\n          { displayName: 'ListItem', component: ListItem },\n          {\n            displayName: 'ListItemPrimaryText',\n            component: ListItemPrimaryText\n          },\n          {\n            displayName: 'ListItemSecondaryText',\n            component: ListItemSecondaryText\n          },\n          { displayName: 'ListItemGraphic', component: ListItemGraphic },\n          { displayName: 'ListItemMeta', component: ListItemMeta },\n          { displayName: 'ListDivider', component: ListDivider },\n          { displayName: 'ListGroup', component: ListGroup },\n          { displayName: 'ListGroupSubheader', component: ListGroupSubheader },\n          { displayName: 'SimpleListItem', component: SimpleListItem }\n        ]}\n      />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}